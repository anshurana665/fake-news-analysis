import pandas as pd
import spacy
from collections import Counter
import matplotlib.pyplot as plt
import seaborn as sns

# Load the NER model
nlp = spacy.load("en_core_web_sm")

# Function to load the dataset
def load_data(file_path):
    """Load the dataset from a CSV file."""
    try:
        return pd.read_csv(file_path)
    except FileNotFoundError:
        print(f"Error: The file {file_path} was not found.")
        return None

# Function to perform Named Entity Recognition (NER) and count entities
def perform_ner(titles):
    """Perform NER on a list of titles and return a Counter of entities."""
    entities = []
    for title in titles:
        doc = nlp(title)
        entities.extend([ent.text for ent in doc.ents])
    return Counter(entities)

# Function to calculate popularity based on tweet IDs
def calculate_popularity(tweet_ids):
    """Calculate the popularity based on the number of tweet IDs."""
    return tweet_ids.apply(lambda x: len(x.split()) if isinstance(x, str) else 0)

# Load the dataset
fake_news_df = load_data('C:/Users/gsgsa/Downloads/FakeNewsNet-master/FakeNewsNet-master/dataset/gossipcop_fake.csv')

if fake_news_df is not None:
    # Perform NER on the titles and count entities
    fake_news_df['entities'] = fake_news_df['title'].apply(lambda x: perform_ner([x]))
    fake_news_df['entity_count'] = fake_news_df['entities'].apply(lambda x: sum(x.values()))

    # Calculate popularity based on tweet IDs
    fake_news_df['popularity'] = calculate_popularity(fake_news_df['tweet_ids'])

    # Create the is_fake column (assuming all entries in this dataset are fake)
    fake_news_df['is_fake'] = True

    # Display the first few rows of the updated DataFrame
    print(fake_news_df[['id', 'title', 'entity_count', 'popularity']].head())

    # Visualization of popularity vs entity count
    plt.figure(figsize=(10, 6))
    sns.scatterplot(data=fake_news_df, x='entity_count', y='popularity', hue='is_fake', alpha=0.7)
    plt.title('Popularity vs Entity Count')
    plt.xlabel('Entity Count')
    plt.ylabel('Popularity (Tweet Count)')
    plt.legend(title='News Type')
    plt.show()  # Ensure the plot is displayed
